group 'org.team2471.frc.lib'
version '2018.0.1'

buildscript {
    ext.kotlin_version = '1.2.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

repositories {
    maven { url "http://first.wpi.edu/FRC/roborio/maven/release" }
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    maven { url "https://raw.githubusercontent.com/Open-RIO/Maven-Mirror/master/m2" }
    mavenCentral()
    jcenter()
}

dependencies {
    compile "edu.wpi.first.wpilibj:wpilibj-java:+"
    compile "edu.wpi.first.wpilibj:wpilibj-jni:+"
    compile "edu.wpi.first.wpilib.networktables.java:NetworkTables:+:arm"
    compile "openrio.mirror.third.ctre:CTRE-phoenix-java:+"
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3'
    compile "org.jetbrains.kotlin:kotlin-reflect"


    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile "edu.wpi.first.wpilib.networktables.java:NetworkTables:+:desktop"
    testCompile 'org.amshove.kluent:kluent:1.31'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

// Task to generate sources JAR
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

// Use tasks above to define artifacts
artifacts {
    archives sourcesJar
}

// So that we can define publication
project.apply plugin: 'maven-publish'

publishing {
    // By passing -Pcustom_local=/some/path and running the
    // publishLibraryPublicationToCustomLocalRepository task you can publish this library to a
    // custom maven repository location on your machine.
    repositories {
        maven {
            name 'CustomLocal'
            url uri(project.hasProperty('custom_local') ? project.getProperty('custom_local') : '/tmp/')
        }
    }

    repositories {
        maven {
            name 'BuildLocal'
            url "$buildDir/repo"
        }
    }
}

publishing {
    publications {
        "${project.name}"(MavenPublication) {

            groupId "org.team2471.frc.lib"
            artifactId project.name
            version "2018.0.1"

            artifact "$buildDir/libs/${project.name}.jar"
            artifact sourcesJar

            pom.withXml {
                // Dependencies
                def dependenciesNode = asNode().getAt("dependencies")[0]
                if (dependenciesNode == null) {
                    dependenciesNode = asNode().appendNode("dependencies")
                }

                // Add all that are 'compile'
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:1.4.30")
    }
}

plugins {
    id "java"
    id "maven-publish"
    id "java-library"
    id "edu.wpi.first.GradleRIO"  version "2023.4.2"
    id "org.jetbrains.kotlin.jvm"  version "1.7.20"
    id "com.github.gmazzo.buildconfig"  version "3.0.0"
}
apply {
    plugin("kotlin")
    plugin("org.jetbrains.dokka")
}
group = "org.team2471.lib"
version = "2023"
var wpiLibVersion =  "2023.4.2"
repositories {
    mavenCentral()
    maven { setUrl "https://frcmaven.wpi.edu/artifactory/release/" }
    maven { setUrl "https://plugins.gradle.org/m2/" }
    maven { setUrl "https://maven.ctr-electronics.com/release/" }
    maven { setUrl "https://maven.revrobotics.com/" }
}
repositories {
    maven {
        url = uri("https://maven.pkg.github.com/Mechanical-Advantage/AdvantageKit")
        credentials {
            username = "Mechanical-Advantage-Bot"
            password = "\u0067\u0068\u0070\u005f\u006e\u0056\u0051\u006a\u0055\u004f\u004c\u0061\u0079\u0066\u006e\u0078\u006e\u0037\u0051\u0049\u0054\u0042\u0032\u004c\u004a\u006d\u0055\u0070\u0073\u0031\u006d\u0037\u004c\u005a\u0030\u0076\u0062\u0070\u0063\u0051"
        }
    }
}
configurations.configureEach {
    exclude group: "edu.wpi.first.wpilibj"
}
dependencies {
    // ...
    def akitJson = new groovy.json.JsonSlurper().parseText(new File(projectDir.getAbsolutePath() + "/vendordeps/AdvantageKit.json").text)
    annotationProcessor "org.littletonrobotics.akit.junction:junction-autolog:$akitJson.version"
}
dependencies {
    // kotlin libs
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'

    // frc libs
    implementation "edu.wpi.first.hal:hal-java:$wpiLibVersion"
    implementation "edu.wpi.first.wpilibj:wpilibj-java:$wpiLibVersion"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$wpiLibVersion"
    implementation "edu.wpi.first.wpimath:wpimath-java:$wpiLibVersion"
    implementation "edu.wpi.first.ntcore:ntcore-jni:$wpiLibVersion"
    implementation "edu.wpi.first.ntcore:ntcore-java:$wpiLibVersion"
    implementation "com.ctre.phoenix:api-java:5.30.4"
    implementation "com.revrobotics.frc:REVLib-java:2023.1.3"


    // other
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.moshi:moshi:1.15.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.14.0'
    implementation 'org.ejml:ejml-simple:0.42'

    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java() // <----- I AM NEEDED FOR ADVANTAGE KIT!!!
    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    implementation wpi.java.deps.wpilib()
    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.roborio)
    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    compileOnly "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31"
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'

    // intentionally not using multhreaded coroutines due to potential memory leaks under heavy load
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    compileOnly 'com.github.gmazzo.buildconfig:com.github.gmazzo.buildconfig.gradle.plugin:3.0.0'

}

compileKotlin {
    kotlinOptions.freeCompilerArgs = ["-XXLanguage:+InlineClasses","-Xopt-in=kotlin.RequiresOptIn"]
}

